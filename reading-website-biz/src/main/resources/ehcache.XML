<?xml version="1.0" encoding="UTF-8"?>
<ehcache>
    　　
    <diskStore path="java.io.tempdir" />
    　　
    <defaultCache
            maxElementsInMemory="1000"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            overflowToDisk="true"
        />
    　　
    <!-- 验证码缓存，过期时间15min -->
    <cache
            name="verifyCodeCache"
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="900000"
            timeToLiveSeconds="900000"
            overflowToDisk="true"
    />

    <cache
            name="testCache"
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="10000"
            timeToLiveSeconds="10000"
            overflowToDisk="true"
        />
    <!--name: 缓存名称，用于区分不同测缓存策略-->
    <!--maxElementsInMemory: 缓存中允许创建的最大对象数-->
    <!--maxElementsOnDisk:磁盘中允许的最多对象数-->
    <!--eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。-->
    <!--timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0 就意味着元素可以停顿无穷长的时间。-->
    <!--timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。-->
    <!--overflowToDisk：内存不足时，是否启用磁盘缓存。-->
    <!--diskPersistent 是否持久化磁盘缓存,当这个属性的值为true时,系统在初始化时会在磁盘中查找文件名为cache名称,后缀名为data的文件。指重启jvm后，数据是否有效。默认为false。-->
    <!--memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。-->
</ehcache>